# application name
spring.application.name=books

# application shortcode to use in request ids
app.shortcode=tarcinapp

app.auth.rs256PublicKey=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0EspTVIjLRu8yCpuVhgXgCnwRTpNGSS9lskOTC2GH3sjs/vpTfBHBfxq4WpMMHK63OkqxtzIStGKN2XXcUkDrkuJzNgxzd6ySq8XofwfFg0EekWn5ab56PXVUhpkQpZQfssnr3ek9v2rdaJMN99ZxhC6WT37zpyRbVVEY+/FH74EkpkXDWxNocv1DdATB05aC4LLxzB4HlOCAOQni0xwm0Pt+RulSqwthPNB66l8y/nBE+ujYYOKSl0MDR7Te88CzjoFIVBeyi6rWp8Dxg0VQNZoJDrPQcF9mJ4a38JtC3UINBtLXIy9zKL4ZTh+EzYQzQ5xDuAqXFiW1vnQMRkWGwIDAQAB
app.auth.issuer=tarcinapp-idm

app.backend.protocol=http
app.backend.host=localhost
app.backend.port=3000
# set '/' for entity-persistence-service backend
app.backend.baseUri=/

# policy evaluation point (opa) configuration
app.opa.protocol=http
app.opa.host=localhost
app.opa.port=8181

# inbound server configuration
app.inbound.port=8081
app.inbound.baseUri=/api/v1/
app.inbound.address=0.0.0.0
app.inbound.metricsEnabled=true
app.inbound.cors.allowedOrigins=

# caching control
app.caching.enabled=true

# logging configuration
app.debug=false
app.logging.tarcinapp=DEBUG
app.logging.gateway=INFO
app.logging.http=TRACE
#app.logging.redisson=INFO

# redis configuration for rate limit, and distributed locking
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.password=devpassword123

# kindPath configuration
app.entityKinds[0].pathMap=books
app.entityKinds[0].name=book
app.entityKinds[0].schema={"$schema":"https://json-schema.org/draft/2020-12/schema","type":"object","properties":{"_name":{"type":"string"},"author":{"type":"string"},"details":{"type":"object","properties":{"publishedDate":{"type":"string","format":"date"},"genre":{"type":"string"}},"required":["publishedDate","genre"]}},"required":["_name","author", "details"]}

# request size overrides for development
app.requestSizes.default.create=50KB
app.requestSizes.default.update=50KB
app.requestSizes.entities.create=1KB
app.requestSizes.lists.create=75KB
app.requestSizes.reactions.create=1KB

# default field set configuration
#app.defaultFieldset.lists: unmanaged
#app.defaultFieldset.entities: bookinfo
app.fieldsets.bookinfo.show=_id,_name,_author

# sample configuration of saved queries
# clients can query ?q=by-book-name&book-name={whatever}
app.queries.by-book-name='filter[where][_name]=' + #query['book-name']

# What are we going to do with query parameters like filter[foo].
# This notation is specific to loopback. We can either
# - use them as they are: false
# - prevent them reach backend.
app.allowLoopbackQueryNotation=true

# disabled routes
app.routes.disabled=updateAllEntities, updateAllEntitiesByKindPath, updateAllLists