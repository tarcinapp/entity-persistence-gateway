# application name
spring.application.name=books

# application shortcode to use in request ids
app.shortcode=tarcinapp

app.auth.rs256PublicKey=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwJV1cBEDGLl9KV8Cxor74LEz+kLX8gFp+wb+c9iFuI4M0xi2aXZX7rKmzxDVa1CYYd4SKVsHpd5Q4SSVLO8GJQCxoee9gHVDoUaRQmpk76KrR/GXcfz+Jiu/L/q7ScBFLSd6dacmrrtjs1sN6aAjS4vTgJZ/KdtIR7yHJ330v+PaJse4yg4Uu1ujT2pG06IxNNBE+QIWP2NCSMoKr7xyoc9bU25pTLXWy2xJlyInhhyRoVIJ1g1Lr2q69HslptfqjKAqJ5Qs0LBbRMCZSudoZHy/4VYFq2rwUo4ULFkjfAjKzJE67sb9oG7JjWI7k+01RA4pIm9RWj4NhIxReDxcUQIDAQAB
app.auth.issuer=https://tarcinapp-keycloak.h3t4eg.easypanel.host/realms/tarcinapp

app.backend.protocol=https
app.backend.host=tarcinapp-entity-persistence-service.ssuvh4.easypanel.host
app.backend.port=443
# set '/' for entity-persistence-service backend
# set '/rad/TarcinappEntityPersistence.in:Tarcinapp/' for entity-persistence-integration backend
# app.backend.baseUri=/
app.backend.baseUri=/

# policy evaluation point (opa) configuration
app.opa.protocol=https
app.opa.host=tarcinapp-entity-persistence-gateway-policies.ssuvh4.easypanel.host
app.opa.port=443

# inbound server configuration
app.inbound.port=8081
app.inbound.baseUri=/api/v1/
app.inbound.address=0.0.0.0
app.inbound.metricsEnabled=true
app.inbound.cors.allowedOrigins=

# caching control
app.caching.enabled=true

# logging configuration
app.debug=true
app.logging.tarcinapp=INFO
app.logging.gateway=INFO
app.logging.http=INFO
#app.logging.redisson=INFO

# redis configuration for rate limit, and distributed locking
spring.data.redis.host=172.16.28.125
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.password=72594a2545d13fba7294

# kindPath configuration
app.entityKinds[0].pathMap=books
app.entityKinds[0].name=book
app.entityKinds[0].schema={"$schema":"https://json-schema.org/draft/2020-12/schema","type":"object","properties":{"name":{"type":"string"},"author":{"type":"string"},"details":{"type":"object","properties":{"publishedDate":{"type":"string","format":"date"},"genre":{"type":"string"}},"required":["publishedDate","genre"]}},"required":["name","author", "details"]}

# default field set configuration
#app.defaultFieldset: unmanaged
app.fieldsets.bookinfo.show=id,name,author

# sample configuration of saved queries
# clients can query ?q=by-book-name&book-name={whatever}
app.queries.by-book-name='filter[where][name]=' + #query['book-name']

# What are we going to do with query parameters like filter[foo].
# This notation is specific to loopback. We can either
# - use them as they are: false
# - prevent them reach backend.
app.allowLoopbackQueryNotation=true

# disabled routes
app.routes.disabled=updateAllEntities, updateAllEntitiesByKindPath